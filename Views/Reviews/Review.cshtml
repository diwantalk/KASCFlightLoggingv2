
@model FlightLog

@{
    ViewData["Title"] = "Review Flight Log";
}

<div class="container-fluid">
    <h1>Review Flight Log</h1>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="mb-0">Flight Information</h5>
                </div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FlightDate)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.FlightDate)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Aircraft)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Aircraft.RegistrationNumber)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Pilot)</dt>
                        <dd class="col-sm-8">@($"{Model.Pilot?.FirstName} {Model.Pilot?.LastName}")</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.TotalFlightTime)</dt>
                        <dd class="col-sm-8">@(Model.TotalFlightTime?.ToString(@"hh\:mm") ?? "Not set")</dd>
                    </dl>
                </div>
            </div>

            @if (Model.Values.Any())
            {
                <div class="card mb-3">
                    <div class="card-header">
                        <h5 class="mb-0">Field Values</h5>
                    </div>
                    <div class="card-body">
                        <dl class="row mb-0">
                            @foreach (var value in Model.Values)
                            {
                                <dt class="col-sm-4">@value.FlightLogField?.DisplayText</dt>
                                <dd class="col-sm-8">@value.Value</dd>
                            }
                        </dl>
                    </div>
                </div>
            }

            @if (Model.Reviews.Any())
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Previous Reviews</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush">
                            @foreach (var review in Model.Reviews)
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-1">
                                            <span class="badge @GetReviewStatusBadgeClass(Model.Status)">
                                                @review.Status
                                            </span>
                                        </h6>
                                        <small>@review.ReviewedAt.ToString("g")</small>
                                    </div>
                                    <p class="mb-1">@review.Comments</p>
                                    <small>By @($"{review.Reviewer?.FirstName} {review.Reviewer?.LastName}")</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Review Decision</h5>
                </div>
                <div class="card-body">
                    <form id="reviewForm" method="post">
                        <div class="form-group mb-3">
                            <label class="control-label">Comments</label>
                            <textarea name="comments" class="form-control" rows="4" required></textarea>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary" formaction="@Url.Action("Approve", new { id = Model.Id })">
                                <i class="fas fa-check"></i> Approve
                            </button>
                            <button type="submit" class="btn btn-danger" formaction="@Url.Action("Reject", new { id = Model.Id })">
                                <i class="fas fa-times"></i> Reject
                            </button>
                            @if (Model.Status == FlightStatus.Approved && Model.IsActive)
                            {
                                <button type="submit" class="btn btn-success" formaction="@Url.Action("Complete", new { id = Model.Id })">
                                    <i class="fas fa-flag-checkered"></i> Complete
                                </button>
                            }
                            <a asp-controller="FlightLogs" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Details
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetReviewStatusBadgeClass(FlightStatus status)
    {
        return status switch
        {
            FlightStatus.Approved => "bg-success",
            FlightStatus.Rejected => "bg-danger",
            FlightStatus.Completed => "bg-info",
            _ => "bg-secondary"
        };
    }
}