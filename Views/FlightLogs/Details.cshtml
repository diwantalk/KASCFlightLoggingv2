@model KASCFlightLogging.Models.FlightLog

@{
    ViewData["Title"] = "Flight Log Details";
}

<h1>Flight Log Details</h1>

<div class="card mb-3">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Flight Information</h5>
            <span class="badge @(Model.Status == FlightStatus.Draft ? "bg-warning" :
                               Model.Status == FlightStatus.PendingReview ? "bg-info" :
                               Model.Status == FlightStatus.Approved ? "bg-success" :
                               Model.Status == FlightStatus.Rejected ? "bg-danger" : "bg-secondary")">
                @Model.Status
            </span>
        </div>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.FlightDate)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.FlightDate)</dd>

            <dt class="col-sm-3">Aircraft</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Aircraft.RegistrationNumber)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DepartureLocation)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.DepartureLocation)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ArrivalLocation)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.ArrivalLocation)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Remarks)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Remarks)</dd>

            <dt class="col-sm-3">Pilot</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.User.FullName)</dd>
        </dl>
    </div>
</div>

@if (Model.Reviews != null && Model.Reviews.Any())
{
    <div class="card mb-3">
        <div class="card-header">
            <h5 class="mb-0">Reviews</h5>
        </div>
        <div class="card-body">
            @foreach (var review in Model.Reviews.OrderByDescending(r => r.ReviewedAt))
            {
                <div class="border-bottom mb-3 pb-3">
                    <div class="d-flex justify-content-between">
                        <strong>@review.Reviewer.FullName</strong>
                        <small>@review.ReviewedAt.ToString("g")</small>
                    </div>
                    <p class="mb-0">@review.Comments</p>
                </div>
            }
        </div>
    </div>
}

<div>
    @if (Model.Status == FlightStatus.Draft)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
    }
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>