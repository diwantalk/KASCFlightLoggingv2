cshtml
@model KASCFlightLogging.Models.ViewModels.FlightLogCreateViewModel

@{
    ViewData["Title"] = "Create Flight Log";
}

<div class="container-fluid">
    <h1>Create Flight Log</h1>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <form asp-action="CreatePrimary">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="FlightDate" class="control-label"></label>
                    <input asp-for="FlightDate" class="form-control" type="date" />
                    <span asp-validation-for="FlightDate" class="text-danger"></span>
                </div>
                <!-- Aircraft Type Selection -->
                <div class="form-group mb-3">
                    <label asp-for="AircraftTypeId" class="control-label">Aircraft Type</label>
                    <select asp-for="AircraftTypeId" id="AircraftTypeId" class="form-select" onchange="loadAircraft(this.value)">
                        <option value="">-- Select Aircraft Type --</option>
                        @foreach (var aircraftType in ViewBag.AircraftTypes)
                        {
                            <option value="@aircraftType.Id">@aircraftType.Name</option>
                        }
                    </select>
                    <span asp-validation-for="AircraftTypeId" class="text-danger"></span>
                </div>

                <!-- Aircraft Selection -->
                <div class="form-group mb-3">
                    <label asp-for="AircraftId" class="control-label">Aircraft</label>
                    <select asp-for="AircraftId" class="form-select" disabled>
                        <option value="">-- Select Aircraft Type First --</option>
                    </select>
                    <span asp-validation-for="AircraftId" class="text-danger"></span>
                </div>

                @if (User.IsInRole("Admin"))
                {
                    <div class="form-group mb-3">
                        <label asp-for="PilotInCommandId" class="control-label">Pilot</label>
                        <select asp-for="PilotInCommandId" class="form-select" asp-items="ViewBag.PilotInCommandId">
                            <option value="">-- Select Pilot --</option>
                        </select>
                        <span asp-validation-for="PilotInCommandId" class="text-danger"></span>
                    </div>
                }

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Continue
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
                        function loadAircraft(aircraftTypeId) {
          const aircraftSelect = document.getElementById('AircraftId');

          console.log('Loading aircraft for type:', aircraftTypeId);

          // Reset and disable the aircraft select
          aircraftSelect.disabled = true;
          aircraftSelect.innerHTML = '<option value="">Loading...</option>';

          if (!aircraftTypeId) {
              aircraftSelect.innerHTML = '<option value="">-- Select Aircraft Type First --</option>';
              return;
          }

          fetch(`/Aircraft/GetByType?aircraftTypeId=${aircraftTypeId}`)
              .then(response => {
                  if (!response.ok) {
                      throw new Error(`HTTP error! status: ${response.status}`);
                  }
                  return response.json();
              })
              .then(data => {
                  console.log('Received data:', data);

                  aircraftSelect.innerHTML = '<option value="">-- Select Aircraft --</option>';

                  // Check if data.$values exists (for JSON.NET serialization)
                  const aircraftList = data.$values || data;

                  if (aircraftList && aircraftList.length > 0) {
                      aircraftList.forEach(aircraft => {
                          const option = document.createElement('option');
                          option.value = aircraft.id;
                          option.textContent = aircraft.registrationNumber;
                          aircraftSelect.appendChild(option);
                      });
                      aircraftSelect.disabled = false;
                  } else {
                      aircraftSelect.innerHTML = '<option value="">No aircraft available for this type</option>';
                      aircraftSelect.disabled = true;
                  }
              })
              .catch(error => {
                  console.error('Error loading aircraft:', error);
                  aircraftSelect.innerHTML = '<option value="">Error loading aircraft - Please try again</option>';
                  aircraftSelect.disabled = true;
              });
        }

        // Add this to help debug
        document.addEventListener('DOMContentLoaded', function() {
          const aircraftTypeSelect = document.getElementById('AircraftTypeId');
          if (aircraftTypeSelect) {
              aircraftTypeSelect.addEventListener('change', function() {
                  console.log('Selected aircraft type:', this.value);
              });
          }
        });

        // Set today's date as default
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.querySelector('input[type="date"]').value = today;

            // Debug: Check if elements exist
            console.log('AircraftTypeId select:', document.getElementById('AircraftTypeId'));
            console.log('AircraftId select:', document.getElementById('AircraftId'));
        });

        // Add change event listener for debugging
        document.getElementById('AircraftTypeId').addEventListener('change', function(e) {
            console.log('AircraftType changed to:', e.target.value);
        });
    </script>
}